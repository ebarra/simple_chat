#NOTAS:
#IMPORTANTE: lo que está entre <!--STYLES--> y <!--STYLES END--> en el layout.ejs lo genera sólo.
#Si lo edito se cambia sólo. Lo mismoc on scripts al final.



#PASOS:

sails new simple_chat

- Pongo LOGS: dos cosas.
    descomento todo el request logger de config/http.js y cambio el orden para ponerlo tras bodyparser
    y en config/log.js activo modo "silly"
- descomento linea 30 de config/models.js   migrate: 'alter'
- creo message.js (con dos campos) y MessageController.js (vacio)
- integro la parte de carlosapa.
   1. copio los assets (los js de vendor los pongo en dependencies) y el main.js lo llamo main_carlosapa.js
   2. adapto el head en el layout.ejs quitando los css
   3. añado a tasks/pipeline.js el 'fonts/font-awesome/font-awesome.min.css'
   4. en el layout al final añado a mano los js
   5. renombro la carpeta images a img de assets




- creo main.js
- creo chat.js y en el form añado el onsubmit
- añado el campo input para el nombre con id="nick"
- hago las templates y uso JST para renderizar la template chat_elem.html desde chat.js una vez por cada chat
- creo User.js y UserController.js
- creo dos rutas, / y /home
- muevo la inicialización del chat a homepage.ejs
- añado la policy flash en config y en la carpeta policies y en el layout para que lo pinte
- pubsub. opciones:
  - Se puede deshabilitar pubsub en el .sailsrc https://gist.github.com/RWOverdijk/786af551baa4b89f9824 pero no lo hago de momento. Voy a intentar usar el pubsub por defecto del blueprint API
  - se puede hacer que no autoconecte los sockets poniendo autoConnect="false" en el script de sails.io.js. ver https://github.com/balderdashy/sails.io.js/blob/master/README.md 
  - ver https://gist.github.com/mikermcneil/6598661 para cómo usar los sockets de sails desde el cliente
  - añado autosubscribe: [], en los modelos, y ya sólo se suscribe por defecto a sails_model_create_message, que se hace con el watch
  - No pongo el autoWatch a false en el modelo Message.ejs, porque si no no se suscribe a los create message y si interesa que se suscriba.

- que no recargue mis propios mensajes al matar el servidor, para eso pongo una variable first_connection en chat.js
- actualizar el propio timeline con mis mensajes. Para esto en el callback del post en chat.js actualizo con un template la timeline
- notificar al resto de un mensaje, como se han suscrito con el watch,  añado io.socket.on('message' en chat.js
- 




#SIGUIENTES:
- decidir modelo de usuario
- lista usuarios conectados
- desplegar heroku


#VER, LINKS, ...
- suscripciones: http://stackoverflow.com/questions/19818953/how-do-i-subscribe-to-a-model-instance-in-sails-js
-para templates no he visto explicación en ningún sitio, sólo https://groups.google.com/forum/#!topic/sailsjs/rtannbZ1H1c
https://lodash.com/docs#template
